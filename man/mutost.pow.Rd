% Generated by roxygen2 (4.0.2): do not edit by hand
\name{mutost.pow}
\alias{mutost.pow}
\title{\code{mutost} power function}
\usage{
mutost.pow(rho, df, s.of.T, c.u = NA, tau.u = NA, alpha = NA, norm = 1,
  support = c(-Inf, Inf), log = FALSE)
}
\arguments{
\item{rho}{vector of quantile}

\item{df}{Degrees of freedom}

\item{s.of.T}{Standard deviation of the test statistic}

\item{c.u}{Upper boundary point of the critical region}

\item{tau.u}{Upper boundary point of the equivalence region}

\item{alpha}{Level of the equivalence test}

\item{norm}{Normalization constant for the truncated power function.}

\item{support}{Support of the truncated power function (vector of dimension 2).}

\item{log}{If \code{TRUE}, the power function is returned on the log scale.}
}
\description{
Compute the power of the one-sample equivalence test for population means of normal summary values
}
\note{
To compute the power, either \code{c.u} or \code{tau.u} and \code{alpha} are required. If \code{tau.u} and \code{alpha}
are given, then the value of \code{c.u} is ignored.

The power function can be truncated to \code{support} and then standardized with \code{norm}.
If one of these is set, the other must be provided too.
}
\examples{
n.of.y 	<- 30
s.of.T	<- 0.2		#this is s.of.y / squrt(n.of.y)

# useful equivalence region for given stochasticity in T: 
# power is not zero, does not plateau around 1, and still high around rho=0

rho		<- seq(-2,2,0.01)
tmp	<- data.table(rho=rho, power=mutost.pow(rho, df=n.of.y-1, s.of.T, tau.u=0.8, alpha=0.01))
p	<- ggplot(tmp,aes(x=rho,y=power)) + geom_line() + labs(y='Power\\n(ABC acceptance probability)')
print(p)

# power increases with tau.u and becomes flat

tmp <- lapply(seq(0.5,1.6,0.2),function(tau.u)
		{
			data.table(tau.u=as.factor(tau.u),rho=rho,power=mutost.pow(rho, df=n.of.y-1, s.of.T, tau.u=tau.u, alpha=0.01))
		})
tmp	<- do.call('rbind', tmp)
p <- ggplot(tmp,aes(x=rho,y=power,colour=tau.u,group=tau.u)) + geom_line() + labs(y='Power\\n(ABC acceptance probability)')
print(p)

# power increases with n.of.y and becomes flat

tau.u 	<- 0.8
s.of.y	<- 0.8
tmp <- lapply(c(10,15,20,25,50,100),function(n.of.y)
		{
			data.table(n.of.y=as.factor(n.of.y),rho=rho,power=mutost.pow(rho, df=n.of.y-1, s.of.y/sqrt(n.of.y), tau.u=tau.u, alpha=0.01))
		})
tmp	<- do.call('rbind', tmp)
p <- ggplot(tmp,aes(x=rho,y=power,colour=n.of.y,group=n.of.y)) + geom_line() + labs(y='Power\\n(ABC acceptance probability)')
print(p)
}
\references{
http://arxiv.org/abs/1305.4283
}

